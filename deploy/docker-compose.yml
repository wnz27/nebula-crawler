version: "3.9"
services:
  nebula_monitor:
    image: dennis-tra/nebula-crawler:latest
    container_name: nebula_monitor
    restart: always
    user: nebula
    entrypoint: ["./docker-entrypoint.sh", "nebula", "--prom-port=6667", "monitor"]
    environment:
      NEBULA_DATABASE_HOST: postgres
      NEBULA_DATABASE_PORT: 5432
      NEBULA_DATABASE_NAME: nebula
      NEBULA_DATABASE_USER: nebuladev
      NEBULA_DATABASE_PASSWORD: nebula123 # TODO: unsafe
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      nebula:
  postgres:
    image: postgres:13
    container_name: nebula_db
    restart: always
    user: postgres
    ports:
      - 5432:5432
    volumes:
      - psql_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nebula"]
      interval: 10s
      timeout: 5s
      retries: 20
    environment:
      POSTGRES_PASSWORD: nebula123 # TODO: unsafe
      POSTGRES_USER: nebuladev
      POSTGRES_DB: nebula
    networks:
      nebula:
  prometheus:
    container_name: nebula_prometheus
    image: prom/prometheus:v2.28.0
    restart: always
    ports:
      - 9090:9090
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      nebula:
  grafana: # default - user: admin, pw: admin
    container_name: nebula_grafana
    image: grafana/grafana:7.5.9
    restart: always
    ports:
      - 3000:3000
    volumes:
      - ./grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
      - ./grafana-dashboards.yml:/etc/grafana/provisioning/dashboards/dashboards.yml
      - ./dashboards:/var/lib/grafana/dashboards
      - grafana_data:/var/lib/grafana
    networks:
      nebula:
networks:
  nebula:
    name: nebula
volumes:
  psql_data: {}
  prometheus_data: {}
  grafana_data: {}
